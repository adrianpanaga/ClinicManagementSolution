{
  "openapi": "3.0.4",
  "info": {
    "title": "Clinic Management API",
    "version": "v1"
  },
  "paths": {
    "/api/Appointments": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Appointments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Appointments/{id}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Appointments/AvailableSlots": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "doctorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Appointments/ByPatientId/{patientId}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Appointments/{id}/status": {
      "put": {
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ClinicSettings/{id}": {
      "get": {
        "tags": [
          "ClinicSettings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetClinicSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClinicSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClinicSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClinicSettings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClinicSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClinicSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClinicSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/InventoryItems": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InventoryItems"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryItems/{id}": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInventoryItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInventoryItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInventoryItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/InventoryItems/restore/{id}": {
      "post": {
        "tags": [
          "InventoryItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ItemBatches": {
      "get": {
        "tags": [
          "ItemBatches"
        ],
        "parameters": [
          {
            "name": "includeDeletedRelated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemBatchDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemBatchDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemBatchDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemBatches"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBatchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBatchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ItemBatchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemBatchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemBatchDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ItemBatches/{id}": {
      "get": {
        "tags": [
          "ItemBatches"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDeletedRelated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ItemBatchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemBatchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemBatchDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemBatches"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBatchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBatchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ItemBatches"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/LabResults": {
      "get": {
        "tags": [
          "LabResults"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabResultDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabResultDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LabResults"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabResultDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabResultDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabResultDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/LabResults/patient/{patientId}": {
      "get": {
        "tags": [
          "LabResults"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabResultDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabResultDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabResultDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/LabResults/{id}": {
      "get": {
        "tags": [
          "LabResults"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LabResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabResultDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LabResults"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabResultDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabResultDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabResultDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "LabResults"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/LabResults/restore/{id}": {
      "post": {
        "tags": [
          "LabResults"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MedicalRecords": {
      "get": {
        "tags": [
          "MedicalRecords"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MedicalRecords"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMedicalRecordsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMedicalRecordsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMedicalRecordsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalRecords/{id}": {
      "get": {
        "tags": [
          "MedicalRecords"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MedicalRecords"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMedicalRecordsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMedicalRecordsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMedicalRecordsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "MedicalRecords"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MedicalRecords/patient/{patientId}": {
      "get": {
        "tags": [
          "MedicalRecords"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalRecords/doctor/{doctorId}": {
      "get": {
        "tags": [
          "MedicalRecords"
        ],
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalRecordsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalRecords/restore/{id}": {
      "post": {
        "tags": [
          "MedicalRecords"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PatientDocuments": {
      "get": {
        "tags": [
          "PatientDocuments"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDocumentDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PatientDocuments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDocumentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDocumentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDocumentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PatientDocuments/patient/{patientId}": {
      "get": {
        "tags": [
          "PatientDocuments"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PatientDocuments/{id}": {
      "get": {
        "tags": [
          "PatientDocuments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDocumentDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PatientDocuments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDocumentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDocumentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PatientDocuments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PatientDocuments/restore/{id}": {
      "post": {
        "tags": [
          "PatientDocuments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Patients": {
      "get": {
        "tags": [
          "Patients"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDetailsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDetailsDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Patients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Patients/{id}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDetailsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Patients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Patients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Patients/restore/{id}": {
      "post": {
        "tags": [
          "Patients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PatientVerification/RequestCode": {
      "post": {
        "tags": [
          "PatientVerification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVerificationCodeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVerificationCodeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVerificationCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PatientVerification/VerifyCode": {
      "post": {
        "tags": [
          "PatientVerification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyCodeResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyCodeResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyCodeResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Services": {
      "get": {
        "tags": [
          "Services"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Services"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Services/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StaffDetails": {
      "get": {
        "tags": [
          "StaffDetails"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffDetailDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffDetailDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffDetailDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StaffDetails"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStaffDetailDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStaffDetailDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStaffDetailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StaffDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffDetailDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StaffDetails/{id}": {
      "get": {
        "tags": [
          "StaffDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StaffDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffDetailDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StaffDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStaffDetailDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStaffDetailDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStaffDetailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "StaffDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StaffDetails/ForBooking": {
      "get": {
        "tags": [
          "StaffDetails"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorForBookingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorForBookingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorForBookingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StaffDetails/restore/{id}": {
      "post": {
        "tags": [
          "StaffDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StockTransactions": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StockTransactions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockTransactionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockTransactionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransactions/{id}": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransactionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransactions/batch/{batchId}": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransactions/staff/{staffId}": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransactions/patient/{patientId}": {
      "get": {
        "tags": [
          "StockTransactions"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TriageRecords": {
      "get": {
        "tags": [
          "TriageRecords"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriageRecordDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriageRecordDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriageRecordDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TriageRecords"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTriageRecordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTriageRecordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTriageRecordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TriageRecordDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriageRecordDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriageRecordDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/TriageRecords/patient/{patientId}": {
      "get": {
        "tags": [
          "TriageRecords"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriageRecordDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriageRecordDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriageRecordDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TriageRecords/{id}": {
      "get": {
        "tags": [
          "TriageRecords"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TriageRecordDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriageRecordDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriageRecordDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TriageRecords"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTriageRecordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTriageRecordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTriageRecordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TriageRecords"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TriageRecords/restore/{id}": {
      "post": {
        "tags": [
          "TriageRecords"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/role": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Vendors/{id}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vendors/restore/{id}": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppointmentDto": {
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "doctorId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/PatientDetailsDto"
          },
          "doctor": {
            "$ref": "#/components/schemas/DoctorForBookingDto"
          },
          "service": {
            "$ref": "#/components/schemas/ServiceDto"
          }
        },
        "additionalProperties": false
      },
      "AppointmentStatus": {
        "enum": [
          "Scheduled",
          "Confirmed",
          "Completed",
          "Cancelled",
          "NoShow",
          "Rescheduled"
        ],
        "type": "string"
      },
      "AssignRoleDto": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAppointmentDto": {
        "required": [
          "appointmentDateTime",
          "serviceId",
          "status"
        ],
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "doctorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          },
          "notes": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "contactNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInventoryItemDto": {
        "required": [
          "itemName",
          "vendorId"
        ],
        "type": "object",
        "properties": {
          "itemName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "category": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "unitOfMeasure": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sellingPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reorderLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "leadTimeDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateItemBatchDto": {
        "required": [
          "batchNumber",
          "itemId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "costPerUnit": {
            "minimum": 0.01,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateLabResultDto": {
        "required": [
          "patientId",
          "resultDate",
          "resultValue",
          "testName"
        ],
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "medicalRecordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "testName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "resultValue": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "unit": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "referenceRange": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "interpretation": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "resultDate": {
            "type": "string",
            "format": "date"
          },
          "orderedByStaffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMedicalRecordsDto": {
        "required": [
          "patientId",
          "staffId"
        ],
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diagnosis": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "treatment": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "prescription": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePatientDocumentDto": {
        "required": [
          "documentName",
          "filePathOrUrl",
          "patientId"
        ],
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "documentName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "documentType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "filePathOrUrl": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "notes": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "uploadedByStaffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePatientDto": {
        "required": [
          "contactNumber",
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "middleName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "bloodType": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "emergencyContactName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "emergencyContactNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateServiceDto": {
        "required": [
          "price",
          "serviceName"
        ],
        "type": "object",
        "properties": {
          "serviceName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "price": {
            "maximum": 9999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateStaffDetailDto": {
        "required": [
          "contactNumber",
          "email",
          "firstName",
          "jobTitle",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "middleName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "jobTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "specialization": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "CreateStockTransactionDto": {
        "required": [
          "batchId",
          "quantity",
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "transactionType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "staffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTriageRecordDto": {
        "required": [
          "chiefComplaint",
          "patientId"
        ],
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chiefComplaint": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "maximum": 42,
            "minimum": 35,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bloodPressureSystolic": {
            "maximum": 250,
            "minimum": 50,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bloodPressureDiastolic": {
            "maximum": 150,
            "minimum": 30,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pulseRate": {
            "maximum": 200,
            "minimum": 40,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "respiratoryRate": {
            "maximum": 30,
            "minimum": 8,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weight": {
            "maximum": 500,
            "minimum": 1,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "height": {
            "maximum": 300,
            "minimum": 50,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateVendorDto": {
        "required": [
          "vendorName"
        ],
        "type": "object",
        "properties": {
          "vendorName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "contactPerson": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DoctorForBookingDto": {
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "specialization": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetClinicSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "openTime": {
            "type": "string",
            "nullable": true
          },
          "closeTime": {
            "type": "string",
            "nullable": true
          },
          "lunchStartTime": {
            "type": "string",
            "nullable": true
          },
          "lunchEndTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryItemDto": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int32"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "unitOfMeasure": {
            "type": "string",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sellingPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reorderLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "leadTimeDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "vendorId": {
            "type": "integer",
            "format": "int32"
          },
          "vendorName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemBatchDto": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "itemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "costPerUnit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "item": {
            "$ref": "#/components/schemas/InventoryItemDto"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorDto"
          }
        },
        "additionalProperties": false
      },
      "LabResultDto": {
        "type": "object",
        "properties": {
          "labResultId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "medicalRecordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "testName": {
            "type": "string",
            "nullable": true
          },
          "resultValue": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "referenceRange": {
            "type": "string",
            "nullable": true
          },
          "interpretation": {
            "type": "string",
            "nullable": true
          },
          "resultDate": {
            "type": "string",
            "format": "date"
          },
          "orderedByStaffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "patient": {
            "$ref": "#/components/schemas/PatientDetailsDto"
          },
          "medicalRecord": {
            "$ref": "#/components/schemas/MedicalRecordsDto"
          },
          "appointment": {
            "$ref": "#/components/schemas/AppointmentDto"
          },
          "orderedByStaff": {
            "$ref": "#/components/schemas/StaffDetailDto"
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedicalRecordsDto": {
        "type": "object",
        "properties": {
          "recordId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diagnosis": {
            "type": "string",
            "nullable": true
          },
          "treatment": {
            "type": "string",
            "nullable": true
          },
          "prescription": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "patient": {
            "$ref": "#/components/schemas/PatientDetailsDto"
          },
          "staff": {
            "$ref": "#/components/schemas/StaffDetailDto"
          },
          "appointment": {
            "$ref": "#/components/schemas/AppointmentDto"
          },
          "service": {
            "$ref": "#/components/schemas/ServiceDto"
          }
        },
        "additionalProperties": false
      },
      "PatientDetailsDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "bloodType": {
            "type": "string",
            "nullable": true
          },
          "emergencyContactName": {
            "type": "string",
            "nullable": true
          },
          "emergencyContactNumber": {
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PatientDocumentDto": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "documentName": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "type": "string",
            "nullable": true
          },
          "filePathOrUrl": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "uploadedByStaffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uploadDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "patient": {
            "$ref": "#/components/schemas/PatientDetailsDto"
          },
          "uploadedByStaff": {
            "$ref": "#/components/schemas/StaffDetailDto"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RegisterUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestVerificationCodeDto": {
        "required": [
          "contactIdentifier",
          "method"
        ],
        "type": "object",
        "properties": {
          "contactIdentifier": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "method": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceDto": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StaffDetailDto": {
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "specialization": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StockTransactionDto": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "integer",
            "format": "int32"
          },
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "transactionType": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "staffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "batch": {
            "$ref": "#/components/schemas/ItemBatchDto"
          },
          "staff": {
            "$ref": "#/components/schemas/StaffDetailDto"
          },
          "patient": {
            "$ref": "#/components/schemas/PatientDetailsDto"
          }
        },
        "additionalProperties": false
      },
      "TriageRecordDto": {
        "type": "object",
        "properties": {
          "triageRecordId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chiefComplaint": {
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bloodPressureSystolic": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bloodPressureDiastolic": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pulseRate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "respiratoryRate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "patient": {
            "$ref": "#/components/schemas/PatientDetailsDto"
          },
          "appointment": {
            "$ref": "#/components/schemas/AppointmentDto"
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentDto": {
        "required": [
          "appointmentId"
        ],
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "doctorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          },
          "notes": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateClinicSettingsDto": {
        "required": [
          "closeTime",
          "lunchEndTime",
          "lunchStartTime",
          "openTime"
        ],
        "type": "object",
        "properties": {
          "openTime": {
            "minLength": 1,
            "type": "string"
          },
          "closeTime": {
            "minLength": 1,
            "type": "string"
          },
          "lunchStartTime": {
            "minLength": 1,
            "type": "string"
          },
          "lunchEndTime": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateInventoryItemDto": {
        "required": [
          "itemId",
          "vendorId"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int32"
          },
          "itemName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "category": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "unitOfMeasure": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sellingPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reorderLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "leadTimeDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateItemBatchDto": {
        "required": [
          "batchId"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "itemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "batchNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "costPerUnit": {
            "minimum": 0.01,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLabResultDto": {
        "required": [
          "labResultId"
        ],
        "type": "object",
        "properties": {
          "labResultId": {
            "type": "integer",
            "format": "int32"
          },
          "medicalRecordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "testName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "resultValue": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "unit": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "referenceRange": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "interpretation": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "resultDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "orderedByStaffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateMedicalRecordsDto": {
        "required": [
          "patientId",
          "recordId",
          "staffId"
        ],
        "type": "object",
        "properties": {
          "recordId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diagnosis": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "treatment": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "prescription": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePatientDocumentDto": {
        "required": [
          "documentId"
        ],
        "type": "object",
        "properties": {
          "documentId": {
            "type": "integer",
            "format": "int32"
          },
          "documentName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "filePathOrUrl": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "uploadedByStaffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdatePatientDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "gender": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "bloodType": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "emergencyContactName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "emergencyContactNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateServiceDto": {
        "required": [
          "price",
          "serviceId",
          "serviceName"
        ],
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "price": {
            "maximum": 9999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateStaffDetailDto": {
        "required": [
          "staffId"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "specialization": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "format": "email",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTriageRecordDto": {
        "required": [
          "triageRecordId"
        ],
        "type": "object",
        "properties": {
          "triageRecordId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chiefComplaint": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "maximum": 42,
            "minimum": 35,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bloodPressureSystolic": {
            "maximum": 250,
            "minimum": 50,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bloodPressureDiastolic": {
            "maximum": 150,
            "minimum": 30,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pulseRate": {
            "maximum": 200,
            "minimum": 40,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "respiratoryRate": {
            "maximum": 30,
            "minimum": 8,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weight": {
            "maximum": 500,
            "minimum": 1,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "height": {
            "maximum": 300,
            "minimum": 50,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateVendorDto": {
        "required": [
          "vendorId"
        ],
        "type": "object",
        "properties": {
          "vendorId": {
            "type": "integer",
            "format": "int32"
          },
          "vendorName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "VendorDto": {
        "type": "object",
        "properties": {
          "vendorId": {
            "type": "integer",
            "format": "int32"
          },
          "vendorName": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VerifyCodeDto": {
        "required": [
          "code",
          "contactIdentifier"
        ],
        "type": "object",
        "properties": {
          "contactIdentifier": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "code": {
            "maxLength": 10,
            "minLength": 4,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "VerifyCodeResultDto": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.\r\n                    Enter 'Bearer' [space] and then your token in the text input below.\r\n                    Example: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}